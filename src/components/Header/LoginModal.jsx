import { useState } from "react";
import axios from "axios";
import "./LoginModal.css";

const LoginModal = ({ onClose, setAdmLogged }) => {
  const [email, setEmail] = useState("");
  const [senha, setSenha] = useState("");
  const [error, setError] = useState("");

  const handleLogin = async (e) => {
    e.preventDefault();
    setError("");

    try {
      // Faz requisi√ß√£o para o backend
      const response = await axios.post("http://localhost:5000/api/login", {
        email,
        senha,
      });

      // Se a API retornar um usu√°rio
      if (response.data && response.data.user) {
        const user = response.data.user;

        console.log("‚úÖ Login realizado com sucesso!");
        console.log("Usu√°rio:", user);

        // Se for admin, libera bot√£o; caso contr√°rio, garante que fique oculto
        if (typeof setAdmLogged === "function") {
          if (user.tipo_usuario === "adm") {
            console.log("üîë Usu√°rio √© administrador. Bot√£o admin liberado.");
            setAdmLogged(true);
          } else {
            console.log("üë§ Usu√°rio comum. Bot√£o admin ocultado.");
            setAdmLogged(false);
          }
        }

        setError("");
        onClose();
      } else {
        console.log("‚ùå Credenciais inv√°lidas!");
        if (typeof setAdmLogged === "function") setAdmLogged(false);
        setError("Credenciais inv√°lidas!");
      }
    } catch (err) {
      // Captura erro detalhado do backend
      const errorMsg = err.response?.data?.error || "Erro no servidor";
      console.error("‚ùå Erro ao fazer login:", errorMsg);

      // Mensagens espec√≠ficas no console
      if (typeof errorMsg === "string") {
        const lower = errorMsg.toLowerCase();
        if (
          lower.includes("usu√°rio") ||
          lower.includes("n√£o encontrado") ||
          lower.includes("email")
        ) {
          console.log("‚ùå Email n√£o encontrado!");
        } else if (lower.includes("senha") || lower.includes("incorreta")) {
          console.log("‚ùå Senha incorreta!");
        } else {
          console.log("‚ùå Erro de autentica√ß√£o:", errorMsg);
        }
      }

      if (typeof setAdmLogged === "function") setAdmLogged(false);
      setError(errorMsg);
    }
  };

  return (
    <div className="modal-overlay">
      <div className="modal">
        <h2>Login</h2>
        <form onSubmit={handleLogin}>
          <label>Email</label>
          <input
            type="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
          />

          <label>Senha</label>
          <input
            type="password"
            value={senha}
            onChange={(e) => setSenha(e.target.value)}
            required
          />

          <button type="submit">Entrar</button>
          {error && <p className="error">{error}</p>}
        </form>
        <button onClick={onClose} className="close-btn">
          Fechar
        </button>
      </div>
    </div>
  );
};

export default LoginModal;
